name: Build and Push Docker Image to Docker Hub

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run tests
        id: run-tests
        run: npm test

      - name: Run build script
        if: success()
        run: npm run build

      - name: Set up Docker Buildx
        if: success()
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract Tag or Branch Name
        if: success()
        id: extract_ref
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
            NUMERIC_TAG_NAME="${TAG_NAME#v}"
            echo "TAG_NAME=${NUMERIC_TAG_NAME}" >> $GITHUB_ENV
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '/' '-')
            echo "TAG_NAME=${SAFE_BRANCH_NAME}" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image to Docker Hub
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPOSITORY  }}:${{ env.TAG_NAME }}
            ${{ env.REGISTRY }}/${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPOSITORY  }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false  # Fix f√ºr unknown/unknown